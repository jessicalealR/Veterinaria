{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\Desktop\\\\ParcialElectiva\\\\Veterinaria\\\\src\\\\pages\\\\ServicioPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, Modal, Form } from 'react-bootstrap';\n\n// Lista de servicios (esto normalmente vendría de una API)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst servicios = [{\n  id: 1,\n  nombre: 'Vacunación',\n  precio: 50\n}, {\n  id: 2,\n  nombre: 'Desparasitacion',\n  precio: 30\n}, {\n  id: 3,\n  nombre: 'Esterilización',\n  precio: 80\n}\n// Agrega más servicios según sea necesario\n];\nconst ServicioPage = () => {\n  _s();\n  const [selectedService, setSelectedService] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [fechaCita, setFechaCita] = useState('');\n  const handleSelectService = service => {\n    setSelectedService(service);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedService(null);\n    setFechaCita('');\n  };\n  const handleSave = e => {\n    e.preventDefault();\n    // Aquí puedes manejar el guardado de la cita, por ejemplo, enviando la fecha a un servidor\n    console.log('Cita agendada:', selectedService, fechaCita);\n    handleCloseModal();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: servicios.map(service => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          className: \"w-100 text-center\",\n          onClick: () => handleSelectService(service),\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: service.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Precio: $\", service.precio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, service.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedService && /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Agendar Cita para \", selectedService.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSave,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFechaCita\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha de Cita\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: fechaCita,\n              onChange: e => setFechaCita(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Agendar Cita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ServicioPage, \"VAszMlaEDsym6cLOukfx04kL4yU=\");\n_c = ServicioPage;\nexport default ServicioPage;\nvar _c;\n$RefreshReg$(_c, \"ServicioPage\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","Modal","Form","jsxDEV","_jsxDEV","servicios","id","nombre","precio","ServicioPage","_s","selectedService","setSelectedService","showModal","setShowModal","fechaCita","setFechaCita","handleSelectService","service","handleCloseModal","handleSave","e","preventDefault","console","log","className","children","map","md","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/karen/Desktop/ParcialElectiva/Veterinaria/src/pages/ServicioPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Button, Modal, Form } from 'react-bootstrap';\r\n\r\n// Lista de servicios (esto normalmente vendría de una API)\r\nconst servicios = [\r\n  { id: 1, nombre: 'Vacunación', precio: 50 },\r\n  { id: 2, nombre: 'Desparasitacion', precio: 30 },\r\n  { id: 3, nombre: 'Esterilización', precio: 80 },\r\n  // Agrega más servicios según sea necesario\r\n];\r\n\r\nconst ServicioPage = () => {\r\n  const [selectedService, setSelectedService] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [fechaCita, setFechaCita] = useState('');\r\n\r\n  const handleSelectService = (service) => {\r\n    setSelectedService(service);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setSelectedService(null);\r\n    setFechaCita('');\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    // Aquí puedes manejar el guardado de la cita, por ejemplo, enviando la fecha a un servidor\r\n    console.log('Cita agendada:', selectedService, fechaCita);\r\n    handleCloseModal();\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-4\">\r\n      <Row>\r\n        {servicios.map((service) => (\r\n          <Col md={4} className=\"mb-4\" key={service.id}>\r\n            <Button\r\n              variant=\"info\"\r\n              className=\"w-100 text-center\"\r\n              onClick={() => handleSelectService(service)}\r\n            >\r\n              <h5>{service.nombre}</h5>\r\n              <p>Precio: ${service.precio}</p>\r\n            </Button>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      {selectedService && (\r\n        <Modal show={showModal} onHide={handleCloseModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Agendar Cita para {selectedService.nombre}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form onSubmit={handleSave}>\r\n              <Form.Group controlId=\"formFechaCita\">\r\n                <Form.Label>Fecha de Cita</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={fechaCita}\r\n                  onChange={(e) => setFechaCita(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Agendar Cita\r\n              </Button>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServicioPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}